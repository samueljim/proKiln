!function(window){"use strict";function registerModule(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)}var applicationModuleName="mean",service={applicationEnvironment:window.env,applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ngFileUpload","ui-notification"],registerModule:registerModule};window.ApplicationConfiguration=service,angular.module("ui-notification").config(["NotificationProvider",function(NotificationProvider){NotificationProvider.setOptions({delay:2e3,startTop:20,startRight:10,verticalSpacing:20,horizontalSpacing:20,positionX:"right",positionY:"bottom"})}])}(window);
!function(app){"use strict";function bootstrapConfig($compileProvider,$locationProvider,$httpProvider,$logProvider){$locationProvider.html5Mode({enabled:!0,requireBase:!1}).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor"),$compileProvider.debugInfoEnabled("production"!==app.applicationEnvironment),$logProvider.debugEnabled("production"!==app.applicationEnvironment)}function init(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[app.applicationModuleName])}angular.module(app.applicationModuleName,app.applicationModuleVendorDependencies),angular.module(app.applicationModuleName).config(bootstrapConfig),bootstrapConfig.$inject=["$compileProvider","$locationProvider","$httpProvider","$logProvider"],angular.element(document).ready(init)}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("kilns",["core"]),app.registerModule("kilns.admin",["core.admin"]),app.registerModule("kilns.admin.routes",["core.admin.routes"]),app.registerModule("kilns.services"),app.registerModule("kilns.routes",["ui.router","core.routes","kilns.services"])}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("core"),app.registerModule("core.routes",["ui.router"]),app.registerModule("core.admin",["core"]),app.registerModule("core.admin.routes",["ui.router"])}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("schedules",["core"]),app.registerModule("schedules.admin",["core.admin"]),app.registerModule("schedules.admin.routes",["core.admin.routes"]),app.registerModule("schedules.services"),app.registerModule("schedules.routes",["ui.router","core.routes","schedules.services"])}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("users"),app.registerModule("users.admin"),app.registerModule("users.admin.routes",["ui.router","core.routes","users.admin.services"]),app.registerModule("users.admin.services"),app.registerModule("users.routes",["ui.router","core.routes"]),app.registerModule("users.services")}(ApplicationConfiguration);
!function(){"use strict";function KilnsController($scope,kiln,Authentication){var vm=this;vm.kiln=kiln,vm.authentication=Authentication}angular.module("kilns").controller("KilnsController",KilnsController),KilnsController.$inject=["$scope","kilnResolve","Authentication"]}();
!function(){"use strict";function KilnsListController(KilnsService){this.kilns=KilnsService.query()}angular.module("kilns").controller("KilnsListController",KilnsListController),KilnsListController.$inject=["KilnsService"]}();
!function(){"use strict";function menuConfig(Menus){Menus.addSubMenuItem("topbar","kilns",{title:"Manage Kilns",state:"admin.kilns.list"})}angular.module("kilns.admin").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("admin.kilns",{abstract:!0,url:"/kilns",template:"<ui-view/>"}).state("admin.kilns.list",{url:"",templateUrl:"/modules/kilns/client/views/admin/list-kilns.client.view.html",controller:"KilnsAdminListController",controllerAs:"vm",data:{roles:["admin"]}}).state("admin.kilns.create",{url:"/create",templateUrl:"/modules/kilns/client/views/admin/form-kiln.client.view.html",controller:"KilnsAdminController",controllerAs:"vm",data:{roles:["admin"]},resolve:{kilnResolve:newKiln}}).state("admin.kilns.edit",{url:"/:kilnId/edit",templateUrl:"/modules/kilns/client/views/admin/form-kiln.client.view.html",controller:"KilnsAdminController",controllerAs:"vm",data:{roles:["admin"]},resolve:{kilnResolve:getKiln}})}function getKiln($stateParams,KilnsService){return KilnsService.get({kilnId:$stateParams.kilnId}).$promise}function newKiln(KilnsService){return new KilnsService}angular.module("kilns.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"],getKiln.$inject=["$stateParams","KilnsService"],newKiln.$inject=["KilnsService"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Kilns",state:"kilns",type:"dropdown",roles:["*"]}),menuService.addSubMenuItem("topbar","kilns",{title:"List Kilns",state:"kilns.list",roles:["*"]})}angular.module("kilns").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("kilns",{abstract:!0,url:"/kilns",template:"<ui-view/>"}).state("kilns.list",{url:"",templateUrl:"/modules/kilns/client/views/list-kilns.client.view.html",controller:"KilnsListController",controllerAs:"vm",data:{pageTitle:"Kilns List"}}).state("kilns.view",{url:"/:kilnId",templateUrl:"/modules/kilns/client/views/view-kiln.client.view.html",controller:"KilnsController",controllerAs:"vm",resolve:{kilnResolve:getKiln},data:{pageTitle:"Kiln {{ kilnResolve.title }}"}})}function getKiln($stateParams,KilnsService){return KilnsService.get({kilnId:$stateParams.kilnId}).$promise}angular.module("kilns.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"],getKiln.$inject=["$stateParams","KilnsService"]}();
!function(){"use strict";function KilnsService($resource,$log){function createOrUpdate(kiln){function onSuccess(kiln){}function onError(errorResponse){handleError(errorResponse.data)}return kiln._id?kiln.$update(onSuccess,onError):kiln.$save(onSuccess,onError)}function handleError(error){$log.error(error)}var Kiln=$resource("/api/kilns/:kilnId",{kilnId:"@_id"},{update:{method:"PUT"}});return angular.extend(Kiln.prototype,{createOrUpdate:function(){return createOrUpdate(this)}}),Kiln}angular.module("kilns.services").factory("KilnsService",KilnsService),KilnsService.$inject=["$resource","$log"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}angular.module("core.admin").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("admin",{abstract:!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}angular.module("core.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenu("account",{roles:["user"]}),menuService.addMenuItem("account",{title:"",state:"settings",type:"dropdown",roles:["user"]}),menuService.addSubMenuItem("account","settings",{title:"Edit Profile",state:"settings.profile"}),menuService.addSubMenuItem("account","settings",{title:"Edit Profile Picture",state:"settings.picture"}),menuService.addSubMenuItem("account","settings",{title:"Change Password",state:"settings.password"})}angular.module("core").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeFilter($rootScope,$state,Authentication){function stateChangeStart(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){for(var allowed=!1,i=0,roles=toState.data.roles;i<roles.length;i++)if("guest"===roles[i]||Authentication.user&&void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(roles[i])){allowed=!0;break}allowed||(event.preventDefault(),null!==Authentication.user&&"object"==typeof Authentication.user?$state.transitionTo("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}function stateChangeSuccess(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)}function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",stateChangeStart),$rootScope.$on("$stateChangeSuccess",stateChangeSuccess)}angular.module("core").run(routeFilter),routeFilter.$inject=["$rootScope","$state","Authentication"]}();
!function(){"use strict";function routeConfig($stateProvider,$urlRouterProvider){$urlRouterProvider.rule(function($injector,$location){var path=$location.path();if(path.length>1&&"/"===path[path.length-1]){var newPath=path.substr(0,path.length-1);$location.replace().path(newPath)}}),$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"/modules/core/client/views/home.client.view.html",controller:"HomeController",controllerAs:"vm"}).state("not-found",{url:"/not-found",templateUrl:"/modules/core/client/views/404.client.view.html",controller:"ErrorController",controllerAs:"vm",params:{message:["$stateParams",function($stateParams){return $stateParams.message}]},data:{ignoreState:!0,pageTitle:"Not Found"}}).state("bad-request",{url:"/bad-request",templateUrl:"/modules/core/client/views/400.client.view.html",controller:"ErrorController",controllerAs:"vm",params:{message:["$stateParams",function($stateParams){return $stateParams.message}]},data:{ignoreState:!0,pageTitle:"Bad Request"}}).state("forbidden",{url:"/forbidden",templateUrl:"/modules/core/client/views/403.client.view.html",data:{ignoreState:!0,pageTitle:"Forbidden"}})}angular.module("core.routes").config(routeConfig),routeConfig.$inject=["$stateProvider","$urlRouterProvider"]}();
!function(){"use strict";function ErrorController($stateParams){var vm=this;vm.errorMessage=null,$stateParams.message&&(vm.errorMessage=$stateParams.message)}angular.module("core").controller("ErrorController",ErrorController),ErrorController.$inject=["$stateParams"]}();
!function(){"use strict";function HeaderController($scope,$state,Authentication,menuService){function stateChangeSuccess(){vm.isCollapsed=!1}var vm=this;vm.accountMenu=menuService.getMenu("account").items[0],vm.authentication=Authentication,vm.isCollapsed=!1,vm.menu=menuService.getMenu("topbar"),$scope.$on("$stateChangeSuccess",stateChangeSuccess)}angular.module("core").controller("HeaderController",HeaderController),HeaderController.$inject=["$scope","$state","Authentication","menuService"]}();
!function(){"use strict";function HomeController(){}angular.module("core").controller("HomeController",HomeController)}();
!function(){"use strict";function autofocus($timeout,$window){function link(scope,element,attrs){$window.innerWidth>=800&&$timeout(function(){var el=element[0];el.focus(),el.selectionStart=el.selectionEnd=el.value.length},100)}return{restrict:"A",link:link}}angular.module("core").directive("autofocus",autofocus),autofocus.$inject=["$timeout","$window"]}();
!function(){"use strict";function pageTitle($rootScope,$interpolate,$state){function link(scope,element){function listener(event,toState){if(toState.data&&toState.data.pageTitle){var stateTitle=$interpolate(toState.data.pageTitle)($state.$current.locals.globals);element.html("proKiln - "+stateTitle)}else element.html("proKiln")}$rootScope.$on("$stateChangeSuccess",listener)}return{restrict:"A",link:link}}angular.module("core").directive("pageTitle",pageTitle),pageTitle.$inject=["$rootScope","$interpolate","$state"]}();
!function(){"use strict";function showErrors($timeout,$interpolate){function compile(elem,attrs){function linkFn(scope,el,attrs,formCtrl){function checkValidity(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)}function reset(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)}function toggleClasses(invalid){if(el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess)return el.toggleClass("has-success",showValidationMessages&&!invalid)}var inputEl,inputName,inputNgEl,options,showSuccess,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),!(inputName=$interpolate(inputNgEl.attr("name")||"")(scope)))throw new Error("show-errors element has no child input elements with a 'name' attribute class");scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},toggleClasses),scope.$on("show-errors-check-validity",checkValidity),scope.$on("show-errors-reset",reset)}if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw new Error("show-errors element does not have the 'form-group' or 'input-group' class");return linkFn}return{restrict:"A",require:"^form",compile:compile}}angular.module("core").directive("showErrors",showErrors),showErrors.$inject=["$timeout","$interpolate"]}();
!function(){"use strict";function menuService(){function addMenu(menuId,options){return options=options||{},service.menus[menuId]={roles:options.roles||service.defaultRoles,items:options.items||[],shouldRender:shouldRender},service.menus[menuId]}function addMenuItem(menuId,options){if(options=options||{},service.validateMenuExistence(menuId),service.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item",class:options.class,roles:null===options.roles||void 0===options.roles?service.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)options.items.hasOwnProperty(i)&&service.addSubMenuItem(menuId,options.state,options.items[i]);return service.menus[menuId]}function addSubMenuItem(menuId,parentItemState,options){options=options||{},service.validateMenuExistence(menuId);for(var itemIndex in service.menus[menuId].items)service.menus[menuId].items[itemIndex].state===parentItemState&&service.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",params:options.params||{},roles:null===options.roles||void 0===options.roles?service.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return service.menus[menuId]}function getMenu(menuId){return service.validateMenuExistence(menuId),service.menus[menuId]}function removeMenu(menuId){service.validateMenuExistence(menuId),delete service.menus[menuId]}function removeMenuItem(menuId,menuItemState){service.validateMenuExistence(menuId);for(var itemIndex in service.menus[menuId].items)service.menus[menuId].items.hasOwnProperty(itemIndex)&&service.menus[menuId].items[itemIndex].state===menuItemState&&service.menus[menuId].items.splice(itemIndex,1);return service.menus[menuId]}function removeSubMenuItem(menuId,submenuItemState){service.validateMenuExistence(menuId);for(var itemIndex in service.menus[menuId].items)if(this.menus[menuId].items.hasOwnProperty(itemIndex))for(var subitemIndex in service.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items.hasOwnProperty(subitemIndex)&&service.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&service.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return service.menus[menuId]}function validateMenuExistence(menuId){if(menuId&&menuId.length){if(service.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")}var shouldRender,service={addMenu:addMenu,addMenuItem:addMenuItem,addSubMenuItem:addSubMenuItem,defaultRoles:["user","admin"],getMenu:getMenu,menus:{},removeMenu:removeMenu,removeMenuItem:removeMenuItem,removeSubMenuItem:removeSubMenuItem,validateMenuExistence:validateMenuExistence};return function(){shouldRender=function(user){if(-1!==this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)if(user.roles.hasOwnProperty(userRoleIndex))for(var roleIndex in this.roles)if(this.roles.hasOwnProperty(roleIndex)&&this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1},addMenu("topbar",{roles:["*"]})}(),service}angular.module("core").factory("menuService",menuService)}();
!function(){"use strict";function Socket(Authentication,$state,$timeout){function connect(){Authentication.user&&(service.socket=io())}function emit(eventName,data){service.socket&&service.socket.emit(eventName,data)}function on(eventName,callback){service.socket&&service.socket.on(eventName,function(data){$timeout(function(){callback(data)})})}function removeListener(eventName){service.socket&&service.socket.removeListener(eventName)}var service={connect:connect,emit:emit,on:on,removeListener:removeListener,socket:null};return connect(),service}angular.module("core").factory("Socket",Socket),Socket.$inject=["Authentication","$state","$timeout"]}();
!function(){"use strict";function menuConfig(Menus){Menus.addSubMenuItem("topbar","schedules",{title:"Manage Schedules",state:"admin.schedules.list"})}angular.module("schedules.admin").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("admin.schedules",{abstract:!0,url:"/schedules",template:"<ui-view/>"}).state("admin.schedules.list",{url:"",templateUrl:"/modules/schedules/client/views/admin/list-schedules.client.view.html",controller:"SchedulesAdminListController",controllerAs:"vm",data:{roles:["admin"]}}).state("admin.schedules.create",{url:"/create",templateUrl:"/modules/schedules/client/views/admin/form-schedule.client.view.html",controller:"SchedulesAdminController",controllerAs:"vm",data:{roles:["admin"]},resolve:{scheduleResolve:newSchedule}}).state("admin.schedules.edit",{url:"/:scheduleId/edit",templateUrl:"/modules/schedules/client/views/admin/form-schedule.client.view.html",controller:"SchedulesAdminController",controllerAs:"vm",data:{roles:["admin"]},resolve:{scheduleResolve:getSchedule}})}function getSchedule($stateParams,SchedulesService){return SchedulesService.get({scheduleId:$stateParams.scheduleId}).$promise}function newSchedule(SchedulesService){return new SchedulesService}angular.module("schedules.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"],getSchedule.$inject=["$stateParams","SchedulesService"],newSchedule.$inject=["SchedulesService"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Schedules",state:"schedules",type:"dropdown",roles:["*"]}),menuService.addSubMenuItem("topbar","schedules",{title:"List Schedules",state:"schedules.list",roles:["*"]})}angular.module("schedules").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("schedules",{abstract:!0,url:"/schedules",template:"<ui-view/>"}).state("schedules.list",{url:"",templateUrl:"/modules/schedules/client/views/list-schedules.client.view.html",controller:"SchedulesListController",controllerAs:"vm",data:{pageTitle:"Schedules List"}}).state("schedules.view",{url:"/:scheduleId",templateUrl:"/modules/schedules/client/views/view-schedule.client.view.html",controller:"SchedulesController",controllerAs:"vm",resolve:{scheduleResolve:getSchedule},data:{pageTitle:"Schedule {{ scheduleResolve.title }}"}})}function getSchedule($stateParams,SchedulesService){return SchedulesService.get({scheduleId:$stateParams.scheduleId}).$promise}angular.module("schedules.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"],getSchedule.$inject=["$stateParams","SchedulesService"]}();
!function(){"use strict";function SchedulesListController(SchedulesService){this.schedules=SchedulesService.query()}angular.module("schedules").controller("SchedulesListController",SchedulesListController),SchedulesListController.$inject=["SchedulesService"]}();
!function(){"use strict";function SchedulesController($scope,schedule,Authentication){var vm=this;vm.schedule=schedule,vm.authentication=Authentication}angular.module("schedules").controller("SchedulesController",SchedulesController),SchedulesController.$inject=["$scope","scheduleResolve","Authentication"]}();
!function(){"use strict";function SchedulesService($resource,$log){function createOrUpdate(schedule){function onSuccess(schedule){}function onError(errorResponse){handleError(errorResponse.data)}return schedule._id?schedule.$update(onSuccess,onError):schedule.$save(onSuccess,onError)}function handleError(error){$log.error(error)}var Schedule=$resource("/api/schedules/:scheduleId",{scheduleId:"@_id"},{update:{method:"PUT"}});return angular.extend(Schedule.prototype,{createOrUpdate:function(){return createOrUpdate(this)}}),Schedule}angular.module("schedules.services").factory("SchedulesService",SchedulesService),SchedulesService.$inject=["$resource","$log"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}angular.module("users.admin").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){function getUser($stateParams,AdminService){return AdminService.get({userId:$stateParams.userId}).$promise}$stateProvider.state("admin.users",{url:"/users",templateUrl:"/modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController",controllerAs:"vm",data:{pageTitle:"Users List"}}).state("admin.user",{url:"/users/:userId",templateUrl:"/modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",controllerAs:"vm",resolve:{userResolve:getUser},data:{pageTitle:"Edit {{ userResolve.displayName }}"}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"/modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",controllerAs:"vm",resolve:{userResolve:getUser},data:{pageTitle:"Edit User {{ userResolve.displayName }}"}}),getUser.$inject=["$stateParams","AdminService"]}angular.module("users.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("settings",{abstract:!0,url:"/settings",templateUrl:"/modules/users/client/views/settings/settings.client.view.html",controller:"SettingsController",controllerAs:"vm",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"/modules/users/client/views/settings/edit-profile.client.view.html",controller:"EditProfileController",controllerAs:"vm",data:{pageTitle:"Settings"}}).state("settings.password",{url:"/password",templateUrl:"/modules/users/client/views/settings/change-password.client.view.html",controller:"ChangePasswordController",controllerAs:"vm",data:{pageTitle:"Settings password"}}).state("settings.picture",{url:"/picture",templateUrl:"/modules/users/client/views/settings/change-profile-picture.client.view.html",controller:"ChangeProfilePictureController",controllerAs:"vm",data:{pageTitle:"Settings picture"}}).state("authentication",{abstract:!0,url:"/authentication",templateUrl:"/modules/users/client/views/authentication/authentication.client.view.html",controller:"AuthenticationController",controllerAs:"vm"}).state("authentication.signup",{url:"/signup",templateUrl:"/modules/users/client/views/authentication/signup.client.view.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signup"}}).state("authentication.signin",{url:"/signin?err",templateUrl:"/modules/users/client/views/authentication/signin.client.view.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signin"}}).state("password",{abstract:!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"/modules/users/client/views/password/forgot-password.client.view.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password forgot"}}).state("password.reset",{abstract:!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"/modules/users/client/views/password/reset-password-invalid.client.view.html",data:{pageTitle:"Password reset invalid"}}).state("password.reset.success",{url:"/success",templateUrl:"/modules/users/client/views/password/reset-password-success.client.view.html",data:{pageTitle:"Password reset success"}}).state("password.reset.form",{url:"/:token",templateUrl:"/modules/users/client/views/password/reset-password.client.view.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password reset form"}})}angular.module("users.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}();
!function(){"use strict";function AuthenticationController($scope,$state,UsersService,$location,$window,Authentication,PasswordValidator,Notification){function signup(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;UsersService.userSignup(vm.credentials).then(onUserSignupSuccess).catch(onUserSignupError)}function signin(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;UsersService.userSignin(vm.credentials).then(onUserSigninSuccess).catch(onUserSigninError)}function callOauthProvider(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}function onUserSignupSuccess(response){vm.authentication.user=response,Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Signup successful!'}),$state.go($state.previous.state.name||"home",$state.previous.params)}function onUserSignupError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Signup Error!',delay:6e3})}function onUserSigninSuccess(response){vm.authentication.user=response,Notification.info({message:"Welcome "+response.firstName}),$state.go($state.previous.state.name||"home",$state.previous.params)}function onUserSigninError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Signin Error!',delay:6e3})}var vm=this;vm.authentication=Authentication,vm.getPopoverMsg=PasswordValidator.getPopoverMsg,vm.signup=signup,vm.signin=signin,vm.callOauthProvider=callOauthProvider,vm.usernameRegex=/^(?=[\w.-]+$)(?!.*[._-]{2})(?!\.)(?!.*\.$).{3,34}$/,$location.search().err&&Notification.error({message:$location.search().err}),vm.authentication.user&&$location.path("/")}angular.module("users").controller("AuthenticationController",AuthenticationController),AuthenticationController.$inject=["$scope","$state","UsersService","$location","$window","Authentication","PasswordValidator","Notification"]}();
!function(){"use strict";function PasswordController($scope,$stateParams,UsersService,$location,Authentication,PasswordValidator,Notification){function askForPasswordReset(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.forgotPasswordForm"),!1;UsersService.requestPasswordReset(vm.credentials).then(onRequestPasswordResetSuccess).catch(onRequestPasswordResetError)}function resetUserPassword(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.resetPasswordForm"),!1;UsersService.resetPassword($stateParams.token,vm.passwordDetails).then(onResetPasswordSuccess).catch(onResetPasswordError)}function onRequestPasswordResetSuccess(response){vm.credentials=null,Notification.success({message:response.message,title:'<i class="glyphicon glyphicon-ok"></i> Password reset email sent successfully!'})}function onRequestPasswordResetError(response){vm.credentials=null,Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Failed to send password reset email!',delay:4e3})}function onResetPasswordSuccess(response){vm.passwordDetails=null,Authentication.user=response,Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Password reset successful!'}),$location.path("/password/reset/success")}function onResetPasswordError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Password reset failed!',delay:4e3})}var vm=this;vm.resetUserPassword=resetUserPassword,vm.askForPasswordReset=askForPasswordReset,vm.authentication=Authentication,vm.getPopoverMsg=PasswordValidator.getPopoverMsg,vm.authentication.user&&$location.path("/")}angular.module("users").controller("PasswordController",PasswordController),PasswordController.$inject=["$scope","$stateParams","UsersService","$location","Authentication","PasswordValidator","Notification"]}();
!function(){"use strict";function passwordValidator(PasswordValidator){function link(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.getPopoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.getPopoverMsg="",scope.passwordErrors=[],status=!0)}return status}}return{require:"ngModel",link:link}}angular.module("users").directive("passwordValidator",passwordValidator),passwordValidator.$inject=["PasswordValidator"]}();
!function(){"use strict";function passwordVerify(){function link(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){return scope.passwordVerify===password})})}return{require:"ngModel",scope:{passwordVerify:"="},link:link}}angular.module("users").directive("passwordVerify",passwordVerify)}();
!function(){"use strict";function lowercase(){function link(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}return{require:"ngModel",link:link}}angular.module("users").directive("lowercase",lowercase)}();
!function(){"use strict";function Authentication($window){return{user:$window.user}}angular.module("users.services").factory("Authentication",Authentication),Authentication.$inject=["$window"]}();
!function(){"use strict";function PasswordValidator($window){function getResult(password){return owaspPasswordStrengthTest.test(password)}function getPopoverMsg(){return"Please enter a passphrase or password with "+owaspPasswordStrengthTest.configs.minLength+" or more characters, numbers, lowercase and uppercase"}var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:getResult,getPopoverMsg:getPopoverMsg}}angular.module("users.services").factory("PasswordValidator",PasswordValidator),PasswordValidator.$inject=["$window"]}();
!function(){"use strict";function UsersService($resource){var Users=$resource("/api/users",{},{update:{method:"PUT"},updatePassword:{method:"POST",url:"/api/users/password"},deleteProvider:{method:"DELETE",url:"/api/users/accounts",params:{provider:"@provider"}},sendPasswordResetToken:{method:"POST",url:"/api/auth/forgot"},resetPasswordWithToken:{method:"POST",url:"/api/auth/reset/:token"},signup:{method:"POST",url:"/api/auth/signup"},signin:{method:"POST",url:"/api/auth/signin"}});return angular.extend(Users,{changePassword:function(passwordDetails){return this.updatePassword(passwordDetails).$promise},removeSocialAccount:function(provider){return this.deleteProvider({provider:provider}).$promise},requestPasswordReset:function(credentials){return this.sendPasswordResetToken(credentials).$promise},resetPassword:function(token,passwordDetails){return this.resetPasswordWithToken({token:token},passwordDetails).$promise},userSignup:function(credentials){return this.signup(credentials).$promise},userSignin:function(credentials){return this.signin(credentials).$promise}}),Users}function AdminService($resource){return $resource("/api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}angular.module("users.services").factory("UsersService",UsersService),UsersService.$inject=["$resource"],angular.module("users.admin.services").factory("AdminService",AdminService),AdminService.$inject=["$resource"]}();
!function(){"use strict";function KilnsAdminController($scope,$state,$window,kiln,Authentication,Notification){function remove(){$window.confirm("Are you sure you want to delete?")&&vm.kiln.$remove(function(){$state.go("admin.kilns.list"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Kiln deleted successfully!'})})}function save(isValid){function successCallback(res){$state.go("admin.kilns.list"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Kiln saved successfully!'})}function errorCallback(res){Notification.error({message:res.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Kiln save error!'})}if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.form.kilnForm"),!1;vm.kiln.createOrUpdate().then(successCallback).catch(errorCallback)}var vm=this;vm.kiln=kiln,vm.authentication=Authentication,vm.form={},vm.remove=remove,vm.save=save}angular.module("kilns.admin").controller("KilnsAdminController",KilnsAdminController),KilnsAdminController.$inject=["$scope","$state","$window","kilnResolve","Authentication","Notification"]}();
!function(){"use strict";function KilnsAdminListController(KilnsService){this.kilns=KilnsService.query()}angular.module("kilns.admin").controller("KilnsAdminListController",KilnsAdminListController),KilnsAdminListController.$inject=["KilnsService"]}();
!function(){"use strict";function authInterceptor($q,$injector,Authentication){function responseError(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 400:$injector.get("$state").go("bad-request",{message:rejection.data.message});break;case 401:Authentication.user=null,$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden");break;case 404:$injector.get("$state").go("not-found",{message:rejection.data.message});break;case-1:$injector.get("Notification").error({message:"No response received from server. Please try again later.",title:"Error processing request!",delay:5e3})}return $q.reject(rejection)}return{responseError:responseError}}angular.module("core").factory("authInterceptor",authInterceptor),authInterceptor.$inject=["$q","$injector","Authentication"]}();
!function(){"use strict";function SchedulesAdminListController(SchedulesService){this.schedules=SchedulesService.query()}angular.module("schedules.admin").controller("SchedulesAdminListController",SchedulesAdminListController),SchedulesAdminListController.$inject=["SchedulesService"]}();
!function(){"use strict";function SchedulesAdminController($scope,$state,$window,schedule,Authentication,Notification){function remove(){$window.confirm("Are you sure you want to delete?")&&vm.schedule.$remove(function(){$state.go("admin.schedules.list"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Schedule deleted successfully!'})})}function save(isValid){function successCallback(res){$state.go("admin.schedules.list"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Schedule saved successfully!'})}function errorCallback(res){Notification.error({message:res.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Schedule save error!'})}if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.form.scheduleForm"),!1;vm.schedule.createOrUpdate().then(successCallback).catch(errorCallback)}var vm=this;vm.schedule=schedule,vm.authentication=Authentication,vm.form={},vm.remove=remove,vm.save=save}angular.module("schedules.admin").controller("SchedulesAdminController",SchedulesAdminController),SchedulesAdminController.$inject=["$scope","$state","$window","scheduleResolve","Authentication","Notification"]}();
!function(){"use strict";function UserListController($scope,$filter,AdminService){function buildPager(){vm.pagedItems=[],vm.itemsPerPage=15,vm.currentPage=1,vm.figureOutItemsToDisplay()}function figureOutItemsToDisplay(){vm.filteredItems=$filter("filter")(vm.users,{$:vm.search}),vm.filterLength=vm.filteredItems.length;var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)}function pageChanged(){vm.figureOutItemsToDisplay()}var vm=this;vm.buildPager=buildPager,vm.figureOutItemsToDisplay=figureOutItemsToDisplay,vm.pageChanged=pageChanged,AdminService.query(function(data){vm.users=data,vm.buildPager()})}angular.module("users.admin").controller("UserListController",UserListController),UserListController.$inject=["$scope","$filter","AdminService"]}();
!function(){"use strict";function UserController($scope,$state,$window,Authentication,user,Notification){function remove(user){$window.confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),vm.users.splice(vm.users.indexOf(user),1),Notification.success("User deleted successfully!")):vm.user.$remove(function(){$state.go("admin.users"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> User deleted successfully!'})}))}function update(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;var user=vm.user;user.$update(function(){$state.go("admin.user",{userId:user._id}),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> User saved successfully!'})},function(errorResponse){Notification.error({message:errorResponse.data.message,title:'<i class="glyphicon glyphicon-remove"></i> User update error!'})})}function isContextUserSelf(){return vm.user.username===vm.authentication.user.username}var vm=this;vm.authentication=Authentication,vm.user=user,vm.remove=remove,vm.update=update,vm.isContextUserSelf=isContextUserSelf}angular.module("users.admin").controller("UserController",UserController),UserController.$inject=["$scope","$state","$window","Authentication","userResolve","Notification"]}();
!function(){"use strict";function ChangePasswordController($scope,$http,Authentication,UsersService,PasswordValidator,Notification){function changeUserPassword(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.passwordForm"),!1;UsersService.changePassword(vm.passwordDetails).then(onChangePasswordSuccess).catch(onChangePasswordError)}function onChangePasswordSuccess(response){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Password Changed Successfully'}),vm.passwordDetails=null}function onChangePasswordError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Password change failed!'})}var vm=this;vm.user=Authentication.user,vm.changeUserPassword=changeUserPassword,vm.getPopoverMsg=PasswordValidator.getPopoverMsg}angular.module("users").controller("ChangePasswordController",ChangePasswordController),ChangePasswordController.$inject=["$scope","$http","Authentication","UsersService","PasswordValidator","Notification"]}();
!function(){"use strict";function ChangeProfilePictureController($timeout,Authentication,Upload,Notification){function onSuccessItem(response){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Successfully changed profile picture'}),vm.user=Authentication.user=response,vm.fileSelected=!1,vm.progress=0}function onErrorItem(response){vm.fileSelected=!1,vm.progress=0,Notification.error({message:response.message,title:'<i class="glyphicon glyphicon-remove"></i> Failed to change profile picture'})}var vm=this;vm.user=Authentication.user,vm.progress=0,vm.upload=function(dataUrl){Upload.upload({url:"/api/users/picture",data:{newProfilePicture:dataUrl}}).then(function(response){$timeout(function(){onSuccessItem(response.data)})},function(response){response.status>0&&onErrorItem(response.data)},function(evt){vm.progress=parseInt(100*evt.loaded/evt.total,10)})}}angular.module("users").controller("ChangeProfilePictureController",ChangeProfilePictureController),ChangeProfilePictureController.$inject=["$timeout","Authentication","Upload","Notification"]}();
!function(){"use strict";function EditProfileController($scope,$http,$location,UsersService,Authentication,Notification){function updateUserProfile(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;new UsersService(vm.user).$update(function(response){$scope.$broadcast("show-errors-reset","vm.userForm"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Edit profile successful!'}),Authentication.user=response},function(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Edit profile failed!'})})}var vm=this;vm.user=Authentication.user,vm.updateUserProfile=updateUserProfile}angular.module("users").controller("EditProfileController",EditProfileController),EditProfileController.$inject=["$scope","$http","$location","UsersService","Authentication","Notification"]}();
!function(){"use strict";function SocialAccountsController($state,$window,UsersService,Authentication,Notification){function hasConnectedAdditionalSocialAccounts(){return vm.user.additionalProvidersData&&Object.keys(vm.user.additionalProvidersData).length}function isConnectedSocialAccount(provider){return vm.user.provider===provider||vm.user.additionalProvidersData&&vm.user.additionalProvidersData[provider]}function removeUserSocialAccount(provider){UsersService.removeSocialAccount(provider).then(onRemoveSocialAccountSuccess).catch(onRemoveSocialAccountError)}function onRemoveSocialAccountSuccess(response){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Removed successfully!'}),vm.user=Authentication.user=response}function onRemoveSocialAccountError(response){Notification.error({message:response.message,title:'<i class="glyphicon glyphicon-remove"></i> Remove failed!'})}function callOauthProvider(url){url+="?redirect_to="+encodeURIComponent($state.$current.url.prefix),$window.location.href=url}var vm=this;vm.user=Authentication.user,vm.hasConnectedAdditionalSocialAccounts=hasConnectedAdditionalSocialAccounts,vm.isConnectedSocialAccount=isConnectedSocialAccount,vm.removeUserSocialAccount=removeUserSocialAccount,vm.callOauthProvider=callOauthProvider}angular.module("users").controller("SocialAccountsController",SocialAccountsController),SocialAccountsController.$inject=["$state","$window","UsersService","Authentication","Notification"]}();
!function(){"use strict";function SettingsController($scope,Authentication){this.user=Authentication.user}angular.module("users").controller("SettingsController",SettingsController),SettingsController.$inject=["$scope","Authentication"]}();
!function(){"use strict";function templates($templateCache){$templateCache.put("modules/schedules/client/views/list-schedules.client.view.html",'<section>\n  <div class="page-header">\n    <h1>Schedules</h1>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="schedule in vm.schedules" ui-sref="schedules.view({ scheduleId: schedule._id })" class="list-group-item">\n      <small class="list-group-item-text">\n        Posted on\n        <span ng-bind="schedule.created | date:\'mediumDate\'"></span>\n        by\n        <span ng-if="schedule.user" ng-bind="schedule.user.displayName"></span>\n        <span ng-if="!schedule.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" ng-bind="schedule.title"></h4>\n      <p class="list-group-item-text" ng-bind="schedule.content"></p>\n    </a>\n  </div>\n</section>\n'),$templateCache.put("modules/schedules/client/views/view-schedule.client.view.html",'<section>\n  <div class="page-header">\n    <h1 ng-bind="vm.schedule.title"></h1>\n  </div>\n  <small>\n    <em class="text-muted">\n      Posted on\n      <span ng-bind="vm.schedule.created | date:\'mediumDate\'"></span>\n      by\n      <span ng-if="vm.schedule.user" ng-bind="vm.schedule.user.displayName"></span>\n      <span ng-if="!vm.schedule.user">Deleted User</span>\n    </em>\n  </small>\n  <p class="lead" ng-bind="vm.schedule.content"></p>\n</section>\n'),$templateCache.put("modules/kilns/client/views/list-kilns.client.view.html",'<section>\n  <div class="page-header">\n    <h1>Kilns</h1>\n  </div>\n\n  <div class="list-group">\n    <a ng-repeat="kiln in vm.kilns" ui-sref="kilns.view({ kilnId: kiln._id })" class="list-group-item">\n      <small class="list-group-item-text">\n        Posted on\n        <span ng-bind="kiln.created | date:\'mediumDate\'"></span>\n        by\n        <span ng-if="kiln.user" ng-bind="kiln.user.displayName"></span>\n        <span ng-if="!kiln.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" ng-bind="kiln.title"></h4>\n      <p class="list-group-item-text" ng-bind="kiln.content"></p>\n    </a>\n  </div>\n</section>\n'),$templateCache.put("modules/kilns/client/views/view-kiln.client.view.html",'<section>\n  <div class="page-header">\n    <h1 ng-bind="vm.kiln.title"></h1>\n  </div>\n  <div class="pull-right">\n    <label>\n      State of kilns\n    </label>\n    <a ng-show="vm.kiln._id" class="btn btn-danger" ng-click="vm.schedule()">\n      <i class="glyphicon glyphicon-stop"></i>\n    </a>\n    <a ng-show="vm.kiln._id" class="btn btn-primary" ng-click="vm.schedule()">\n      <i class="glyphicon glyphicon-play"></i>\n    </a>\n    <a ng-show="vm.kiln._id" class="btn btn-info" ng-click="vm.schedule()">\n      <i class="glyphicon glyphicon-refresh"></i>\n    </a>\n  <br><br>\n    <label>\n    Start a new Schedule\n    </label>\n    <a ng-show="vm.kiln._id" class="btn btn-warning" ng-click="vm.schedule()">\n      <i class="glyphicon glyphicon-plus"></i>\n    </a>\n\n    <a ng-show="vm.kiln._id" class="btn btn-danger" ng-click="vm.schedule()">\n      <i class="glyphicon glyphicon-warning-sign"></i>\n    </a>\n    <br>\n  </div>s\n  <br>\n  <small>\n    <em class="text-muted">\n      Posted on\n      <span ng-bind="vm.kiln.created | date:\'mediumDate\'"></span>\n\n      <span ng-if="vm.kiln.user" ng-bind="vm.kiln.user.displayName"></span>\n      <span ng-if="!vm.kiln.user">Deleted User</span>\n    </em>\n  </small>\n  <p class="lead" ng-bind="vm.kiln.content"></p>\n  <img src="modules/kilns/client/graph.PNG" style="width: 80%;" alt="graph">\n</section>\n'),$templateCache.put("modules/core/client/views/400.client.view.html",'<div class="page-header">\n  <h1>Bad Request</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  <span ng-if="vm.errorMessage" ng-bind="vm.errorMessage"></span>\n  <span ng-if="!vm.errorMessage">You made a bad request</span>\n</div>\n'),$templateCache.put("modules/core/client/views/403.client.view.html",'<div class="page-header">\n  <h1>Forbidden</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  You are not authorized to access this resource\n</div>\n'),$templateCache.put("modules/core/client/views/404.client.view.html",'<div class="page-header">\n  <h1>Page Not Found</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span ng-if="vm.errorMessage" ng-bind="vm.errorMessage"></span>\n  <span ng-if="!vm.errorMessage">Page Not Found</span>\n</div>\n'),$templateCache.put("modules/core/client/views/header.client.view.html",'<div class="container" ng-controller="HeaderController as vm">\n  <div class="navbar-header">\n    <button class="navbar-toggle" type="button" ng-click="vm.isCollapsed = !vm.isCollapsed">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n    </button>\n    <a ui-sref="home" class="navbar-brand">pro<strong>K</strong>iln</a>\n  </div>\n  <nav class="navbar-collapse" uib-collapse="!vm.isCollapsed" role="navigation">\n    <ul class="nav navbar-nav" ng-if="vm.menu.shouldRender(vm.authentication.user);">\n      <li ng-repeat="item in vm.menu.items | orderBy: \'position\'" ng-if="item.shouldRender(vm.authentication.user);" ng-switch="item.type" ng-class="{ dropdown: item.type === \'dropdown\' }" ui-sref-active="active" class="{{item.class}}" uib-dropdown="item.type === \'dropdown\'">\n        <a ng-switch-when="dropdown" class="dropdown-toggle" uib-dropdown-toggle role="button">{{::item.title}}&nbsp;<span class="caret"></span></a>\n        <ul ng-switch-when="dropdown" class="dropdown-menu">\n          <li ng-repeat="subitem in item.items | orderBy: \'position\'" ng-if="subitem.shouldRender(vm.authentication.user);">\n            <a ui-sref="{{subitem.state}}({{subitem.params}})" ng-bind="subitem.title"></a>\n          </li>\n        </ul>\n        <a ng-switch-default ui-sref="{{item.state}}" ng-bind="item.title"></a>\n      </li>\n    </ul>\n    <ul class="nav navbar-nav navbar-right" ng-hide="vm.authentication.user">\n      <li ui-sref-active="active">\n        <a ui-sref="authentication.signup">Sign Up</a>\n      </li>\n      <li class="divider-vertical"></li>\n      <li ui-sref-active="active">\n        <a ui-sref="authentication.signin">Sign In</a>\n      </li>\n    </ul>\n    <ul class="nav navbar-nav navbar-right" ng-show="vm.authentication.user">\n      <li class="dropdown" uib-dropdown>\n        <a class="dropdown-toggle user-header-dropdown-toggle" uib-dropdown-toggle role="button">\n          <img ng-src="/{{vm.authentication.user.profileImageURL}}" alt="{{vm.authentication.user.displayName}}" class="header-profile-image" />\n          <span ng-bind="vm.authentication.user.displayName"></span> <b class="caret"></b>\n        </a>\n        <ul class="dropdown-menu" role="menu">\n          <li ui-sref-active="active" ng-repeat="item in vm.accountMenu.items">\n            <a ui-sref="{{item.state}}" ng-bind="item.title"></a>\n          </li>\n          <li class="divider"></li>\n          <li>\n            <a href="/api/auth/signout" target="_self">Signout</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n</div>\n'),$templateCache.put("modules/core/client/views/home.client.view.html",'<section>\n  <div class="jumbotron text-center">\n    <div class="row">\n      <div class="col-md-6 col-md-offset-3 col-sm-6 col-sm-offset-3 col-xs-12">\n        <img alt="proKilnLogo" class="img-responsive text-center center-block" src="/modules/core/client/img/brand/logo.png" />\n      </div>\n    </div>\n    <br>\n    <div class="row">\n      <p class="lead">\n        A kiln solution\n      </p>\n    </div>\n    <div class="row">\n      <p>\n        <a class="btn btn-primary btn-lg" href="" target="_blank">Learn more</a>\n      </p>\n    </div>\n  </div>\n  <div>\n    <h2>A kiln solution</h2>\n    <p>A kiln (/kɪln/ or /kɪl/,[1] originally pronounced "kill", with the "n" silent) is a thermally insulated chamber, a type of oven, that produces temperatures sufficient to complete some process, such as hardening, drying, or chemical changes. Kilns have been used for millennia to turn objects made from clay into pottery, tiles and bricks. Various industries use rotary kilns for pyroprocessing—to calcinate ores, to calcinate limestone to lime for cement, and to transform many other materials.</p>\n  </div>\n  <div class="row">\n    <div class="col-md-3">\n      <h2><strong>S</strong>ecure</h2>\n      <p>Security is the degree of resistance to, or protection from, harm. It applies to any vulnerable and/or valuable asset, such as a person, dwelling, community, item, nation, or organization.\n        As noted by the Institute for Security and Open Methodologies (ISECOM) in the OSSTMM 3, security provides "a form of protection where a separation is created between the assets and the threat." These separations are generically called "controls," and sometimes include changes to the asset or the threat.\n      </p>\n    </div>\n    <div class="col-md-3">\n      <h2><strong>A</strong>ccurate</h2>\n      <p>\n        Accuracy has two definitions:\n\n        More commonly, it is a description of systematic errors, a measure of statistical bias; as these cause a difference between a result and a "true" value, ISO calls this trueness.\n        Alternatively, ISO defines accuracy as describing a combination of both types of observational error above (random and systematic), so high accuracy requires both high precision and high trueness.\n        In simplest terms, given a set of data points from a series of measurements, the set can be said to be precise if the values are close to the average value of the quantity being measured, while the set can be said to be accurate if the values are close to the true value of the quantity being measured. The two concepts are independent of each other, so a particular set of data can be said to be either accurate, or precise, or both, or neither.      </p>\n    </div>\n    <div class="col-md-3">\n      <h2><strong>F</strong>ast</h2>\n      <p>\n        1.\n        moving or able to move, operate, function, or take effect quickly; quick; swift; rapid:\n        a fast horse; a fast pain reliever; a fast thinker.\n        2.\n        done in comparatively little time; taking a comparatively short time:\n        a fast race; fast work.\n        3.\n        indicating a time in advance of the correct time, as of a clock.\n        noting or according to daylight-saving time.\n      </p>\n    </div>\n    <div class="col-md-3">\n      <h2><strong>E</strong>asy</h2>\n      <p>\n        1.\n        not hard or difficult; requiring no great labor or effort:\n        a book that is easy to read; an easy victory.\n        2.\n        free from pain, discomfort, worry, or care:\n        He led an easy life.\n        3.\n        providing or conducive to ease or comfort; comfortable:\n        an easy stance; an easy relationship.\n      </p>\n    </div>\n  </div>\n  <br>Samuel Henry\n</section>\n'),$templateCache.put("modules/users/client/views/admin/edit-user.client.view.html",'<section>\n  <div class="page-header">\n    <h1>User <span ng-bind="vm.user.username"></span></h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.userForm" ng-submit="vm.update(vm.userForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.user.firstName" placeholder="First Name" required autofocus />\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.user.lastName" placeholder="Last Name" required />\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="roles">Roles</label>\n          <div class="controls">\n            <input class="form-control" type="text" name="roles" ng-model="vm.user.roles" id="roles" ng-list required />\n            <div ng-messages="vm.userForm.roles.$error" role="alert">\n              <p class="help-block error-text" ng-message="required">At least one role is required.</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group">\n          <input type="submit" value="Update" class="btn btn-default">\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/views/admin/list-users.client.view.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-4">\n        <h1>Users</h1>\n      </div>\n      <div class="col-md-4" style="margin-top: 2em">\n        <input class="form-control col-md-4" type="text" ng-model="vm.search" placeholder="Search" ng-change="vm.figureOutItemsToDisplay()" />\n      </div>\n    </div>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="user in vm.pagedItems" ui-sref="admin.user({userId: user._id})" class="list-group-item">\n      <h4 class="list-group-item-heading" ng-bind="user.username"></h4>\n      <p class="list-group-item-text pull-right small" ng-bind="user.roles"></p>\n      <p class="list-group-item-text" ng-bind="user.email"></p>\n    </a>\n  </div>\n\n  <uib-pagination boundary-links="true" max-size="8" items-per-page="vm.itemsPerPage" total-items="vm.filterLength" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></uib-pagination>\n</section>\n'),$templateCache.put("modules/users/client/views/admin/view-user.client.view.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-6">\n        <h1 ng-bind="vm.user.username"></h1>\n      </div>\n      <div class="col-md-4">\n        <a class="btn btn-primary" ui-sref="admin.user-edit({userId: vm.user._id})">\n          <i class="glyphicon glyphicon-edit"></i>\n        </a>\n        <a class="btn btn-primary" ng-click="vm.remove()" ng-if="!vm.isContextUserSelf()">\n          <i class="glyphicon glyphicon-trash"></i>\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-md-8">\n      <div class="row">\n        <div class="col-md-3"><strong>First Name</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.firstName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Last Name</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.lastName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Email</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.email"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Created</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.created | date"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Roles</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.roles"></div>\n      </div>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/views/password/forgot-password.client.view.html",'<section class="row">\n  <h3 class="col-md-12 text-center">Restore your password</h3>\n  <p class="small text-center">Enter your account username.</p>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-5 col-md-2">\n    <form name="vm.forgotPasswordForm" ng-submit="vm.askForPasswordReset(vm.forgotPasswordForm.$valid)" class="form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <input type="text" id="username" name="username" class="form-control" ng-model="vm.credentials.username" placeholder="Username" lowercase required autofocus>\n          <div ng-messages="vm.forgotPasswordForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a username.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Submit</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/views/password/reset-password-invalid.client.view.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password reset is invalid</h3>\n  <a ui-sref="password.forgot" class="col-md-12">Ask for a new password reset</a>\n</section>\n'),$templateCache.put("modules/users/client/views/password/reset-password-success.client.view.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password successfully reset</h3>\n  <a ui-sref="home" class="col-md-12">Continue to home page</a>\n</section>\n'),$templateCache.put("modules/users/client/views/password/reset-password.client.view.html",'<section class="row">\n  <h3 class="col-md-12 text-center">Reset your password</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.resetPasswordForm" ng-submit="vm.resetUserPassword(vm.resetPasswordForm.$valid)" class="signin form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="vm.passwordDetails.newPassword" placeholder="New Password" autocomplete="new-password" uib-popover="{{vm.getPopoverMsg()}}" uib-popover-trigger="focus" uib-popover-placement="top" password-validator required autofocus>\n          <div ng-messages="vm.resetPasswordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.resetPasswordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="vm.passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="vm.passwordDetails.newPassword" required>\n          <div ng-messages="vm.resetPasswordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter the password again to verify.</p>\n            <p class="help-block error-text" ng-show="vm.resetPasswordForm.verifyPassword.$error.passwordVerify">Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.resetPasswordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Update Password</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/views/authentication/authentication.client.view.html",'<section class="row">\n  \x3c!--<h3 class="col-md-12 text-center">Sign in using your social accounts</h3>--\x3e\n  \x3c!--<div class="col-md-12 text-center">--\x3e\n    \x3c!--<div class="social-account-container social-button"><a class="btn"><img class="img-responsive" ng-click="vm.callOauthProvider(\'/api/auth/facebook\')" ng-src="/modules/users/client/img/buttons/facebook.png"></a></div>--\x3e\n    \x3c!--<div class="social-account-container social-button"><a class="btn"><img class="img-responsive" ng-click="vm.callOauthProvider(\'/api/auth/twitter\')" ng-src="/modules/users/client/img/buttons/twitter.png"></a></div>--\x3e\n    \x3c!--<div class="social-account-container social-button"><a class="btn"><img class="img-responsive" ng-click="vm.callOauthProvider(\'/api/auth/google\')" ng-src="/modules/users/client/img/buttons/google.png"></a></div>--\x3e\n    \x3c!--<div class="social-account-container social-button"><a class="btn"><img class="img-responsive" ng-click="vm.callOauthProvider(\'/api/auth/linkedin\')" ng-src="/modules/users/client/img/buttons/linkedin.png"></a></div>--\x3e\n    \x3c!--<div class="social-account-container social-button"><a class="btn"><img class="img-responsive" ng-click="vm.callOauthProvider(\'/api/auth/github\')" ng-src="/modules/users/client/img/buttons/github.png"></a></div>--\x3e\n    \x3c!--<div class="social-account-container social-button"><a class="btn"><img class="img-responsive" ng-click="vm.callOauthProvider(\'/api/auth/paypal\')"  ng-src="/modules/users/client/img/buttons/paypal.png"></a></div>--\x3e\n  \x3c!--</div>--\x3e\n  <br>\n  <br>\n  <div ui-view></div>\n</section>\n'),$templateCache.put("modules/users/client/views/authentication/signin.client.view.html",'<div>\n  <h3 class="col-xs-12 text-center">Sign In to your account</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.signin(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <uib-alert type="danger" ng-show="vm.error" class="text-center text-danger">\n            <span ng-bind="vm.error"></span>\n          </uib-alert>\n          <label for="usernameOrEmail">Username or Email</label>\n          <input type="text" id="usernameOrEmail" name="usernameOrEmail" class="form-control" ng-model="vm.credentials.usernameOrEmail" placeholder="Username or Email" required autofocus>\n          <div ng-messages="vm.userForm.usernameOrEmail.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username or Email is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n          <input type="password" id="password" name="password" class="form-control" ng-model="vm.credentials.password" placeholder="Password" required>\n          <div ng-messages="vm.userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign in</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signup">Sign up</a>\n        </div>\n        <div class="text-center forgot-password">\n          <a ui-sref="password.forgot">Forgot your password?</a>\n        </div>\n        <br />\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),$templateCache.put("modules/users/client/views/authentication/signup.client.view.html",'<div>\n  <h3 class="col-xs-12 text-center">Sign up to an account</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.signup(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.credentials.firstName" placeholder="First Name" required autofocus>\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.credentials.lastName" placeholder="Last Name" required>\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="vm.credentials.email" placeholder="Email" lowercase required>\n          <div ng-messages="vm.userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="vm.credentials.username" ng-pattern="vm.usernameRegex" placeholder="Username" lowercase required>\n          <div ng-messages="vm.userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n            <p class="help-block error-text" ng-message="pattern">Please enter a valid username: 3+ characters long, non restricted word, characters "_-.", no consecutive dots, does not begin or end with dots, letters a-z and numbers 0-9.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n            <input type="password" id="password" name="password" class="form-control" ng-model="vm.credentials.password" placeholder="Password" uib-popover="{{vm.getPopoverMsg()}}" popover-trigger="outsideClick" password-validator required>\n          <div ng-messages="vm.userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.userForm.password.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.userForm.password.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign up</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signin" class="show-signup">Sign in</a>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),$templateCache.put("modules/users/client/views/settings/change-password.client.view.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="vm.passwordForm" ng-submit="vm.changeUserPassword(vm.passwordForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="currentPassword">Current Password</label>\n          <input type="password" id="currentPassword" name="currentPassword" class="form-control" ng-model="vm.passwordDetails.currentPassword" placeholder="Current Password" required autofocus>\n          <div ng-messages="vm.passwordForm.currentPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Your current password is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="vm.passwordDetails.newPassword" placeholder="New Password" uib-popover="{{vm.getPopoverMsg()}}" uib-popover-trigger="focus" password-validator required>\n          <div ng-messages="vm.passwordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.passwordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="vm.passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="vm.passwordDetails.newPassword" required>\n          <div ng-messages="vm.passwordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Verify your new password.</p>\n            <p class="help-block error-text" ng-show="vm.passwordForm.verifyPassword.$error.passwordVerify">Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.passwordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Password</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),
$templateCache.put("modules/users/client/views/settings/change-profile-picture.client.view.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-3 col-md-4">\n    <form class="signin form-horizontal">\n      <fieldset>\n        <div class="form-group text-center">\n          <img ngf-src="vm.fileSelected ? picFile : \'/\' + vm.user.profileImageURL" alt="{{vm.user.displayName}}" class="img-thumbnail user-profile-picture" ngf-drop>\n        </div>\n        <div ng-show="vm.loading" class="form-group text-center">\n          <img ng-src="/modules/core/client/img/loaders/loader.gif" height="50" width="50" alt="Loading image...">\n        </div>\n        <div ng-show="!vm.fileSelected" class="text-center form-group">\n          <button class="btn btn-default btn-file" ngf-select="(vm.fileSelected = true) && (vm.loading = false)" ng-model="picFile" accept="image/*" ngf-before-model-change="vm.loading = true" ngf-resize="{width: 400}" ngf-resize-if="$width > 400 || $height > 400">Select Picture</button>\n        </div>\n        <div ng-show="vm.fileSelected" class="text-center form-group">\n          <button class="btn btn-primary" ng-click="vm.upload(picFile)">Use This Picture</button>\n          <button class="btn btn-default" ng-click="vm.fileSelected = false">Cancel</button>\n        </div>\n        <div ng-show="vm.fileSelected" class="progress text-center">\n          <div class="progress-bar" role="progressbar" aria-valuenow="{{vm.progress}}" aria-valuemin="0" aria-valuemax="100" style="width:{{vm.progress}}%" ng-bind="vm.progress + \'%\'">\n            <span class="sr-only">{{vm.progress}}% Complete</span>\n          </div>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/views/settings/edit-profile.client.view.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.updateUserProfile(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.user.firstName" placeholder="First Name" required autofocus>\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.user.lastName" placeholder="Last Name" required>\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="vm.user.email" placeholder="Email" lowercase required>\n          <div ng-messages="vm.userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="vm.user.username" placeholder="Username" lowercase required>\n          <div ng-messages="vm.userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Profile</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/views/settings/manage-social-accounts.client.view.html",'<section class="row">\n  \x3c!--<h3 class="col-md-12 text-center" ng-show="vm.hasConnectedAdditionalSocialAccounts()">Connected social accounts:</h3>--\x3e\n  \x3c!--<div class="col-md-12 text-center">--\x3e\n    \x3c!--&lt;!&ndash; If the user\'s provider field (primary) is a social account, show it here &ndash;&gt;--\x3e\n    \x3c!--<div ng-if="vm.user.provider !== \'local\'" class="social-account-container">--\x3e\n      \x3c!--<img ng-src="/modules/users/client/img/buttons/{{vm.user.provider}}.png">--\x3e\n      \x3c!--<i class="glyphicon glyphicon-check text-success user-primary-account" data-toggle="popover" title="Primary: {{vm.user.provider}}"></i>--\x3e\n    \x3c!--</div>--\x3e\n    \x3c!--<div ng-repeat="(providerName, providerData) in vm.user.additionalProvidersData" class="social-account-container">--\x3e\n      \x3c!--<a href ng-click="vm.removeUserSocialAccount(providerName)">--\x3e\n        \x3c!--<img class="social-button" ng-src="/modules/users/client/img/buttons/{{::providerName}}.png">--\x3e\n        \x3c!--<span class="btn btn-danger btn-add-remove-account">--\x3e\n          \x3c!--<i class="glyphicon glyphicon-trash"></i>--\x3e\n        \x3c!--</span>--\x3e\n      \x3c!--</a>--\x3e\n    \x3c!--</div>--\x3e\n  \x3c!--</div>--\x3e\n  \x3c!--<h3 class="col-md-12 text-center" ng-show="!vm.hasConnectedAdditionalSocialAccounts()">Unconnected social accounts:</h3>--\x3e\n  \x3c!--<div class="col-md-12 text-center">--\x3e\n    \x3c!--<div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'facebook\')">--\x3e\n      \x3c!--<a href="" ng-click="vm.callOauthProvider(\'/api/auth/facebook\')">--\x3e\n        \x3c!--<img class="social-button" ng-src="/modules/users/client/img/buttons/facebook.png">--\x3e\n        \x3c!--<span class="btn btn-success btn-add-remove-account">--\x3e\n          \x3c!--<i class="glyphicon glyphicon-plus"></i>--\x3e\n        \x3c!--</span>--\x3e\n      \x3c!--</a>--\x3e\n    \x3c!--</div>--\x3e\n    \x3c!--<div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'twitter\')">--\x3e\n      \x3c!--<a href="" ng-click="vm.callOauthProvider(\'/api/auth/twitter\')">--\x3e\n        \x3c!--<img class="social-button" ng-src="/modules/users/client/img/buttons/twitter.png">--\x3e\n        \x3c!--<span class="btn btn-success btn-add-remove-account">--\x3e\n          \x3c!--<i class="glyphicon glyphicon-plus"></i>--\x3e\n        \x3c!--</span>--\x3e\n      \x3c!--</a>--\x3e\n    \x3c!--</div>--\x3e\n    \x3c!--<div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'google\')">--\x3e\n      \x3c!--<a href="" ng-click="vm.callOauthProvider(\'/api/auth/google\')">--\x3e\n        \x3c!--<img class="social-button" ng-src="/modules/users/client/img/buttons/google.png">--\x3e\n        \x3c!--<span class="btn btn-success btn-add-remove-account">--\x3e\n          \x3c!--<i class="glyphicon glyphicon-plus"></i>--\x3e\n        \x3c!--</span>--\x3e\n      \x3c!--</a>--\x3e\n    \x3c!--</div>--\x3e\n    \x3c!--<div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'linkedin\')">--\x3e\n      \x3c!--<a href="" ng-click="vm.callOauthProvider(\'/api/auth/linkedin\')">--\x3e\n        \x3c!--<img class="social-button" ng-src="/modules/users/client/img/buttons/linkedin.png">--\x3e\n        \x3c!--<span class="btn btn-success btn-add-remove-account">--\x3e\n          \x3c!--<i class="glyphicon glyphicon-plus"></i>--\x3e\n        \x3c!--</span>--\x3e\n      \x3c!--</a>--\x3e\n    \x3c!--</div>--\x3e\n    \x3c!--<div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'github\')">--\x3e\n      \x3c!--<a href="" ng-click="vm.callOauthProvider(\'/api/auth/github\')">--\x3e\n        \x3c!--<img class="social-button" ng-src="/modules/users/client/img/buttons/github.png">--\x3e\n        \x3c!--<span class="btn btn-success btn-add-remove-account">--\x3e\n          \x3c!--<i class="glyphicon glyphicon-plus"></i>--\x3e\n        \x3c!--</span>--\x3e\n      \x3c!--</a>--\x3e\n    \x3c!--</div>--\x3e\n    \x3c!--<div class="social-account-container" ng-hide="vm.isConnectedSocialAccount(\'paypal\')">--\x3e\n      \x3c!--<a href="" ng-click="vm.callOauthProvider(\'/api/auth/paypal\')">--\x3e\n        \x3c!--<img class="social-button" ng-src="/modules/users/client/img/buttons/paypal.png">--\x3e\n        \x3c!--<span class="btn btn-success btn-add-remove-account">--\x3e\n          \x3c!--<i class="glyphicon glyphicon-plus"></i>--\x3e\n        \x3c!--</span>--\x3e\n      \x3c!--</a>--\x3e\n    \x3c!--</div>--\x3e\n  \x3c!--</div>--\x3e\n</section>\n'),$templateCache.put("modules/users/client/views/settings/settings.client.view.html",'<section>\n  <div class="page-header">\n    <h1>Settings</h1>\n  </div>\n  <div class="row">\n    <nav class="col-sm-3 col-md-3">\n      <ul class="nav nav-pills nav-stacked">\n        <li ui-sref-active="active">\n          <a ui-sref="settings.profile">Edit Profile</a>\n        </li>\n        <li ui-sref-active="active">\n          <a ui-sref="settings.picture">Change Profile Picture</a>\n        </li>\n        <li ui-sref-active="active" ng-show="vm.user.provider === \'local\'">\n          <a ui-sref="settings.password">Change Password</a>\n        </li>\n        \x3c!--<li ui-sref-active="active">--\x3e\n          \x3c!--<a ui-sref="settings.accounts">Manage Social Accounts</a>--\x3e\n        \x3c!--</li>--\x3e\n        <br>\n        <br>\n      </ul>\n    </nav>\n    <div class="col-sm-9 col-md-8 settings-view">\n      <div ui-view></div>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/schedules/client/views/admin/form-schedule.client.view.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.schedule._id ? \'Edit Schedule\' : \'New Schedule\'}}</h1>\n  </div>\n  <div class="pull-right">\n    <a ng-show="vm.schedule._id" class="btn btn-primary" ng-click="vm.remove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </a>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.form.scheduleForm" class="form-horizontal" ng-submit="vm.save(vm.form.scheduleForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="title">Title</label>\n          <input name="title" type="text" ng-model="vm.schedule.title" id="title" class="form-control" placeholder="Title" required autofocus>\n          <div ng-messages="vm.form.scheduleForm.title.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Schedule title is required.</p>\n          </div>\n        </div>\n        <div class="form-group">\n          <label class="control-label" for="content">Content</label>\n          <textarea name="content" data-ng-model="vm.schedule.content" id="content" class="form-control" cols="30" rows="10" placeholder="Content"></textarea>\n        </div>\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{vm.schedule._id ? \'Update\' : \'Create\'}}</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/schedules/client/views/admin/list-schedules.client.view.html",'<section>\n  <div class="page-header">\n    <h1>\n      Schedules\n      <a class="btn btn-primary pull-right" data-ui-sref="admin.schedules.create">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </h1>\n  </div>\n  <div class="list-group">\n    <a data-ng-repeat="schedule in vm.schedules" data-ui-sref="admin.schedules.edit({scheduleId: schedule._id})" class="list-group-item">\n      <small class="list-group-item-text">\n        Posted on\n        <span data-ng-bind="schedule.created | date:\'mediumDate\'"></span>\n        by\n        <span ng-if="schedule.user" ng-bind="schedule.user.displayName"></span>\n        <span ng-if="!schedule.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" data-ng-bind="schedule.title"></h4>\n      <p class="list-group-item-text" data-ng-bind="schedule.content"></p>\n    </a>\n  </div>\n  <div class="alert alert-warning text-center" data-ng-if="schedules.$resolved && !schedules.length">\n    No schedules yet, why don\'t you <a data-ui-sref="admin.schedules.create">create one</a>?\n  </div>\n</section>\n'),$templateCache.put("modules/kilns/client/views/admin/form-kiln.client.view.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.kiln._id ? \'Edit Kiln\' : \'New Kiln\'}}</h1>\n  </div>\n  <div class="pull-right">\n    <a ng-show="vm.kiln._id" class="btn btn-primary" ng-click="vm.remove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </a>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.form.kilnForm" class="form-horizontal" ng-submit="vm.save(vm.form.kilnForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="title">Title</label>\n          <input name="title" type="text" ng-model="vm.kiln.title" id="title" class="form-control" placeholder="Title" required autofocus>\n          <div ng-messages="vm.form.kilnForm.title.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Kiln title is required.</p>\n          </div>\n        </div>\n        <div class="form-group">\n          <label class="control-label" for="content">Content</label>\n          <textarea name="content" data-ng-model="vm.kiln.content" id="content" class="form-control" cols="30" rows="10" placeholder="Content"></textarea>\n        </div>\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{vm.kiln._id ? \'Update\' : \'Create\'}}</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/kilns/client/views/admin/list-kilns.client.view.html",'<section>\n  <div class="page-header">\n    <h1>\n      Kilns\n      <a class="btn btn-primary pull-right" data-ui-sref="admin.kilns.create">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </h1>\n  </div>\n  <div class="list-group">\n    <a data-ng-repeat="kiln in vm.kilns" data-ui-sref="admin.kilns.edit({kilnId: kiln._id})" class="list-group-item">\n      <small class="list-group-item-text">\n        Posted on\n        <span data-ng-bind="kiln.created | date:\'mediumDate\'"></span>\n        by\n        <span ng-if="kiln.user" ng-bind="kiln.user.displayName"></span>\n        <span ng-if="!kiln.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" data-ng-bind="kiln.title"></h4>\n      <p class="list-group-item-text" data-ng-bind="kiln.content"></p>\n    </a>\n  </div>\n  <div class="alert alert-warning text-center" data-ng-if="kilns.$resolved && !kilns.length">\n    No kilns yet, why don\'t you <a data-ui-sref="admin.kilns.create">create one</a>?\n  </div>\n</section>\n')}angular.module("core").run(templates),templates.$inject=["$templateCache"]}();