{
  "_args": [
    [
      {
        "raw": "istanbul-threshold-checker@^0.1.0",
        "scope": null,
        "escapedName": "istanbul-threshold-checker",
        "name": "istanbul-threshold-checker",
        "rawSpec": "^0.1.0",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "C:\\Users\\thesa\\Documents\\kilncontroller\\proKilnWeb\\node_modules\\gulp-istanbul"
    ]
  ],
  "_from": "istanbul-threshold-checker@>=0.1.0 <0.2.0",
  "_id": "istanbul-threshold-checker@0.1.0",
  "_inCache": true,
  "_location": "/istanbul-threshold-checker",
  "_nodeVersion": "0.12.0",
  "_npmUser": {
    "name": "peterjwest",
    "email": "peterjwest3@gmail.com"
  },
  "_npmVersion": "2.5.1",
  "_phantomChildren": {
    "amdefine": "1.0.1",
    "deep-is": "0.1.3",
    "esutils": "2.0.2",
    "fileset": "0.2.1",
    "handlebars": "4.0.6",
    "has-flag": "1.0.0",
    "js-yaml": "3.6.1",
    "mkdirp": "0.5.1",
    "nopt": "3.0.6",
    "once": "1.4.0",
    "prelude-ls": "1.1.2",
    "type-check": "0.3.2",
    "which": "1.2.14"
  },
  "_requested": {
    "raw": "istanbul-threshold-checker@^0.1.0",
    "scope": null,
    "escapedName": "istanbul-threshold-checker",
    "name": "istanbul-threshold-checker",
    "rawSpec": "^0.1.0",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gulp-istanbul"
  ],
  "_resolved": "https://registry.npmjs.org/istanbul-threshold-checker/-/istanbul-threshold-checker-0.1.0.tgz",
  "_shasum": "0e1442c017cb27a85f781734fefd2126405ca39c",
  "_shrinkwrap": null,
  "_spec": "istanbul-threshold-checker@^0.1.0",
  "_where": "C:\\Users\\thesa\\Documents\\kilncontroller\\proKilnWeb\\node_modules\\gulp-istanbul",
  "author": {
    "name": "Peter West"
  },
  "bugs": {
    "url": "https://github.com/peterjwest/istanbul-threshold-checker/issues"
  },
  "dependencies": {
    "istanbul": "0.3.*",
    "lodash": "3.6.*"
  },
  "description": "Utility module to check istanbul thresholds",
  "devDependencies": {
    "assert": "1.3.*",
    "gulp": "3.8.*",
    "gulp-istanbul": "0.8.*",
    "gulp-jscs": "1.4.*",
    "gulp-mocha": "2.0.*",
    "istanbul-text-full-reporter": "0.1.*",
    "sinon": "1.14.*"
  },
  "directories": {},
  "dist": {
    "shasum": "0e1442c017cb27a85f781734fefd2126405ca39c",
    "tarball": "https://registry.npmjs.org/istanbul-threshold-checker/-/istanbul-threshold-checker-0.1.0.tgz"
  },
  "gitHead": "976175250acc09051ecaff0f0f756f05986e7bed",
  "homepage": "https://github.com/peterjwest/istanbul-threshold-checker",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "peterjwest",
      "email": "peterjwest3@gmail.com"
    }
  ],
  "name": "istanbul-threshold-checker",
  "optionalDependencies": {},
  "readme": "# Istanbul threshold checker\nChecks an instanbul coverage report against thresholds\n\n## Usage\n\nInstall with npm\n\n    npm install istanbul-threshold-checker\n\nUse by feeding a coverge report from istanbul:\n\n    var collector = new require('istanbul').Collector();\n    collector.add(coverageJsonObject);\n    var coverage = collector.getFinalCoverage();\n\n    var checker = require('istanbul-threshold-checker');\n    var results = checker.checkFailures(thresholds, coverage);\n\n\n## Thresholds\n\nThresholds can be specified in a variety of formats. Each threshold value can be specified as:\n\n- A positive number - checks coverage meets this value as a percentage\n- A negative number - checks there are no more coverage gaps than this number\n- Any falsey value - skips checking this threshold\n\nThresholds can be checked across all files or against each file using `global` and `each` keys respectively:\n\n    var thresholds = {\n        global: {\n            statements: 100,\n            branches: 90,\n            lines: 70,\n            functions: -10\n        },\n        each: {\n            statements: 0,\n            branches: -20,\n            lines: 60,\n            functions: 100\n        }\n    };\n\nYou can exclude `global` or `each` if you only want to check global or per file coverage.\n\nEach set of thresholds can also be a single value, which checks that value across all metrics:\n\n    var thresholds = {\n        global: 80,\n        each: -10\n    };\n\n\n## Results\n\nThe checker returns results in the following format:\n\n    [{\n        type: 'lines',\n        global: { failed: false, value: 90 },\n        each: { failed: true, failures: ['/file/test.js'] }\n    }, {\n        type: 'statements',\n        global: { failed: true, value: 50 },\n        each: { failed: true, failures: ['/file/test2.js'] }\n    }, {\n        type: 'functions',\n        global: { failed: true, value: -10 },\n        each: { failed: true, failures: ['/file/test2.js'] }\n    }, {\n        type: 'branches',\n        global: { failed: true, value: 66.67 },\n        each: { failed: false, failures: [] }\n    }]\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/peterjwest/istanbul-threshold-checker.git"
  },
  "scripts": {},
  "version": "0.1.0"
}
